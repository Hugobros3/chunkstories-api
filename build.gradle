/*
 * chunkstories-api
 * Collection of interfaces forming an API and the skeleton of the chunkstories project.
 */

// TODO port this garbage to kts

buildscript {
	ext.kotlin_version = '1.6.10'

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

plugins {
	id "com.diffplug.gradle.spotless" version "3.14.0"
	id "java"
	id "java-library"
	id "maven"
	id "org.jetbrains.kotlin.jvm" version "1.6.10"
}

version = '2.0.4'

group = 'xyz.chunkstories'
description = 'API and core data structures to write mods against'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

spotless {
	java {
		licenseHeaderFile 'codequality/header-include-notice.txt'
		eclipse().configFile 'codequality/style.xml'
	}

	kotlin {
		licenseHeaderFile 'codequality/header-include-notice.txt'
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

compileJava {
	options.encoding = 'utf-8'
}

jar {
	//I don't like numbers in my jars
	version = null
}

compileJava.options.debugOptions.debugLevel = "source,lines,vars"

configurations {
	deployerJars
}

dependencies {
	api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	api group: 'org.joml', name: 'joml', version: '1.9.3'
	api group: 'org.slf4j', name: 'slf4j-api', version: '1.7.9'

	implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
	api group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

//Bundle that with the API jar :)
artifacts {
	archives sourcesJar
	archives javadocJar
}

javadoc {
	//Our current javadoc isn't exactly too compliant :')
	failOnError = false
}
