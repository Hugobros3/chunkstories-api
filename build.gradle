/*
 * chunkstories-api
 * Collection of interfaces forming an API and the skeleton of the chunkstories project.
 */

buildscript {
	repositories {
		//mavenLocal()
		mavenCentral()	
		maven { url "http://maven.xol.io/repository/public/" }
		//maven { url 'https://jitpack.io' }
		//maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		//classpath "gradle.plugin.de.set.gradle:gradle-eclipse-compiler-plugin:1.1.0"		
		//classpath 'com.github.johni0702:gradle-ecj-plugin:master-SNAPSHOT'
		classpath 'de.johni0702.gradle:gradle-ecj-plugin:1.1-JAVA9'
	}
}

plugins {
    id "com.github.hierynomus.license" version "0.14.0"
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven'

ext {
	useEclipseCompiler = true
}

//TODO Make version depend on Git ?
version = '121'

group = 'io.xol.chunkstories'
description = 'API for the game \'Chunk Stories\''

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "http://maven.xol.io/repository/public/" }
}

if(ext.useEclipseCompiler) {
	apply plugin: 'de.johni0702.ecj'
	//apply plugin: "de.set.ecj"	

	println "Using ECJ compiler"
}

license {
    header rootProject.file('codequality/header-include-notice.txt')
    strictCheck true
	ignoreFailures true
	
	mapping {
        java='DOUBLESLASH_STYLE'
    }
}

compileJava {
	options.encoding = 'utf-8'

	//Do we need this ?
	//options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

jar {
	//I don't like numbers in my jars
	version = null
}

compileJava.options.debugOptions.debugLevel = "source,lines,vars"

configurations {
	deployerJars
}

dependencies {
	compile group: 'org.joml', name: 'joml', version: '1.9.3'
	compile group: 'io.xol.enklume', name: 'enklume', version: 100
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.9'
	compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
	
	deployerJars "org.apache.maven.wagon:wagon-ssh:3.0.0"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

//Bundle that with the API jar :)
artifacts {
	archives sourcesJar
	archives javadocJar
}

javadoc {
	//Our current javadoc isn't exactly too compliant :')
	failOnError = false
}

//Create a properties.gradle with login credentials to use this.
//Watch out: wagon-ssh is an old mess and WILL NOT TAKE EdDSA host keys
//You MUST ask the server for one of those and replace whatever you had for it in known_hosts
if(hasProperty('uploadUsername')) {
	println 'Login credentials found'
	uploadArchives {
		repositories {
				mavenDeployer {
       				configuration = configurations.deployerJars	
					
					if(project.hasProperty('uploadPrivateKey')) {
						println 'Found private key'
						repository(url: "scp://xol.io/home/maven-user/maven-repo") {				
							authentication(userName: uploadUsername, privateKey: uploadPrivateKey)
		    				}
					}
					else {
						println 'Found password'
						repository(url: "scp://xol.io/home/maven-user/maven-repo") {				
							authentication(userName: uploadUsername, password: uploadPassword)
		    				}
					}
				}
		}
	}
}
